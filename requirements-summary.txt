# Hospital Management System - Dependency Summary
# This is NOT a Python requirements.txt file
# This project uses Node.js with package.json for dependency management

# ===== SYSTEM REQUIREMENTS =====
Node.js >= 16.x
npm >= 8.x
MongoDB >= 5.0

# ===== BACKEND DEPENDENCIES (package.json) =====
# Framework & Core
express@5.1.0              # Web application framework
mongoose@8.16.4             # MongoDB object modeling
cors@2.8.5                  # Cross-origin resource sharing
dotenv@17.2.0               # Environment variable management

# Authentication & Security  
jsonwebtoken@9.0.2          # JWT token generation and verification
bcryptjs@3.0.2              # Password hashing

# Real-time & Communication
socket.io@4.8.1             # Real-time bidirectional communication
simple-peer@9.11.1          # WebRTC peer connections
peer@1.0.2                  # Peer-to-peer networking

# Media & Recording
recorder-js@1.0.7           # Audio recording functionality

# Development
nodemon@3.1.10              # Auto-restart during development

# ===== FRONTEND DEPENDENCIES (package.json) =====
# Core React
react@19.1.0                # React framework
react-dom@19.1.0            # React DOM bindings
react-router-dom@7.7.0      # Client-side routing
react-scripts@5.0.1         # Create React App build tools

# TypeScript
typescript@4.9.5            # TypeScript compiler
@types/react@19.1.8         # React type definitions
@types/react-dom@19.1.6     # React DOM type definitions
@types/node@16.18.126       # Node.js type definitions
@types/jest@27.5.2          # Jest type definitions
@types/simple-peer@9.11.8   # Simple-peer type definitions

# HTTP & Communication
axios@1.11.0                # HTTP client
socket.io-client@4.8.1      # Socket.io client

# Media & Recording
simple-peer@9.11.1          # WebRTC wrapper
recordrtc@5.6.2             # Recording capabilities
microsoft-cognitiveservices-speech-sdk@1.45.0  # Speech recognition

# Polyfills & Utilities
buffer@6.0.3                # Buffer polyfill for browsers
stream-browserify@3.0.0     # Stream polyfill
util@0.12.5                 # Node.js util polyfill
process@0.11.10             # Process polyfill

# Testing
@testing-library/react@16.3.0      # React testing utilities
@testing-library/jest-dom@6.6.3    # Jest DOM matchers
@testing-library/user-event@13.5.0 # User interaction testing
@testing-library/dom@10.4.0        # DOM testing utilities

# Performance & Analytics
web-vitals@2.1.4            # Web performance metrics

# Build Tools & Configuration
react-app-rewired@2.2.1     # Override CRA configuration
@craco/craco@7.1.0          # CRA configuration layer

# ===== BROWSER REQUIREMENTS =====
Chrome >= 90 (recommended for video calls)
Firefox >= 88
Safari >= 14
Edge >= 90

# Required browser APIs:
# - WebRTC (for video calls)
# - MediaDevices API (camera/microphone)
# - LocalStorage
# - WebSocket
# - File API

# ===== ENVIRONMENT SETUP =====
# Backend (.env file):
MONGODB_URI=mongodb://localhost:27017/hospital_management
JWT_SECRET=your_jwt_secret_here
PORT=5000
NODE_ENV=development

# ===== INSTALLATION COMMANDS =====
# Install backend dependencies:
# cd backend && npm install

# Install frontend dependencies:
# cd frontend && npm install

# Start development servers:
# Backend: cd backend && npm start
# Frontend: cd frontend && npm start

# ===== PORT CONFIGURATION =====
Frontend Development Server: 3000
Backend API Server: 5000
MongoDB Database: 27017

# ===== ADDITIONAL REQUIREMENTS =====
# For video calls:
# - Stable internet connection
# - Camera and microphone permissions
# - WebRTC-compatible browser
# - STUN server access (Google's public STUN servers)

# For development:
# - Git for version control
# - VS Code or preferred IDE
# - MongoDB Compass (optional GUI)
# - Postman for API testing (optional)
